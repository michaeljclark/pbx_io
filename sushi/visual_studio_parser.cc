
#line 1 "sushi/visual_studio_parser.rl"
//
//  project_parser.rl
//

#include <cstdio>
#include <cassert>
#include <cstdlib>
#include <cctype>
#include <cstring>

#include "visual_studio_parser.h"


#line 102 "sushi/visual_studio_parser.rl"



#line 21 "sushi/visual_studio_parser.cc"
static const char _visual_studio_parser_actions[] = {
	0, 1, 0, 1, 1, 1, 2, 1, 
	3, 1, 4, 1, 5, 1, 6, 1, 
	7, 1, 8, 1, 9, 1, 10, 1, 
	11, 1, 12, 1, 13, 1, 14, 1, 
	15, 1, 16, 1, 17, 1, 18, 2, 
	0, 6, 2, 0, 7, 2, 0, 10, 
	2, 0, 11, 2, 0, 15, 2, 0, 
	16, 2, 0, 17
};

static const short _visual_studio_parser_key_offsets[] = {
	0, 0, 1, 2, 3, 4, 5, 6, 
	7, 8, 9, 10, 11, 12, 13, 14, 
	15, 16, 17, 18, 19, 20, 21, 22, 
	23, 24, 25, 26, 27, 28, 29, 30, 
	31, 32, 33, 34, 35, 36, 37, 38, 
	39, 40, 41, 42, 43, 44, 45, 46, 
	47, 48, 49, 50, 51, 52, 53, 54, 
	55, 56, 57, 58, 59, 62, 66, 67, 
	68, 69, 70, 71, 72, 73, 74, 75, 
	76, 77, 78, 79, 80, 81, 82, 83, 
	86, 90, 91, 92, 93, 94, 95, 96, 
	97, 98, 100, 101, 102, 103, 104, 105, 
	106, 107, 108, 109, 110, 111, 112, 113, 
	114, 116, 117, 118, 119, 120, 121, 122, 
	123, 124, 125, 126, 127, 128, 129, 130, 
	131, 132, 133, 134, 135, 136, 137, 138, 
	139, 140, 141, 142, 143, 144, 145, 146, 
	147, 148, 149, 150, 151, 152, 153, 154, 
	155, 156, 157, 158, 159, 160, 161, 162, 
	163, 165, 166, 170, 174, 178, 182, 186, 
	190, 194, 198, 199, 203, 207, 211, 215, 
	216, 220, 224, 228, 232, 233, 237, 241, 
	245, 249, 250, 254, 258, 262, 266, 270, 
	274, 278, 282, 286, 290, 294, 298, 299, 
	300, 301, 302, 304, 306, 307, 308, 311, 
	314, 318, 321, 322, 323, 324, 325, 326, 
	327, 328, 329, 330, 331, 332, 333, 334, 
	335, 336, 337, 338, 340, 341, 342, 343, 
	344, 345, 346, 347, 348, 349, 350, 351, 
	352, 353, 354, 356, 357, 358, 359, 360, 
	361, 362, 363, 364, 365, 366, 367, 368, 
	369, 370, 371, 372, 373, 374, 375, 376, 
	377, 378, 379, 380, 381, 382, 383, 384, 
	385, 386, 387, 388, 389, 390, 391, 393, 
	395, 397, 398, 399, 402, 405, 409, 412, 
	413, 414, 415, 416, 417, 418, 419, 420, 
	421, 422, 423, 424, 425, 426, 427, 428, 
	429, 431, 432, 433, 434, 435, 436, 437, 
	438, 439, 440, 441, 442, 443, 444, 445, 
	446, 447, 448, 449, 450, 451, 452, 453, 
	454, 455, 456, 457, 458, 459, 460, 461, 
	462, 463, 465, 466, 467, 468, 469, 470, 
	471, 472, 473, 474, 475, 476, 477, 478, 
	479, 480, 481, 482, 483, 484, 485, 486, 
	487, 488, 489, 490, 491, 492, 493, 494, 
	495, 496, 497, 498, 499, 500, 501, 502, 
	503, 504, 506, 508, 510, 511, 512, 515, 
	518, 522, 525, 526, 527, 528, 529, 530, 
	531, 532, 533, 534, 535, 536, 537, 538, 
	539, 540, 541, 542, 543, 544, 545, 546, 
	547, 548, 549, 550, 551, 552, 553, 554, 
	555, 556, 557, 558, 559, 560, 561, 562, 
	563, 564, 565, 566, 567, 568, 571, 575, 
	576, 577, 578, 579, 580, 581, 582, 583, 
	584, 585, 589, 593, 597, 601, 605, 609, 
	613, 617, 618, 622, 626, 630, 634, 635, 
	639, 643, 647, 651, 652, 656, 660, 664, 
	668, 669, 673, 677, 681, 685, 689, 693, 
	697, 701, 705, 709, 713, 717, 718, 719, 
	720, 721, 722, 723, 724, 725, 726, 727, 
	728, 729, 730, 731, 732, 733, 734, 735, 
	739, 743, 747, 751, 755, 759, 763, 767, 
	768, 772, 776, 780, 784, 785, 789, 793, 
	797, 801, 802, 806, 810, 814, 818, 819, 
	823, 827, 831, 835, 839, 843, 847, 851, 
	855, 859, 863, 867, 868, 869, 870, 871, 
	873, 874, 875, 876, 877, 878, 879, 880, 
	881, 882, 883, 884, 885, 886, 887, 888, 
	889, 890, 891, 892, 893, 894, 895, 896, 
	897, 898, 899, 900, 901, 902, 903, 904, 
	905, 906, 907, 908, 909, 910, 911, 912, 
	913, 914, 915, 916, 917, 918, 919, 920, 
	921, 922, 923, 924, 925, 927, 928, 932, 
	936, 940, 944, 948, 952, 956, 960, 961, 
	965, 969, 973, 977, 978, 982, 986, 990, 
	994, 995, 999, 1003, 1007, 1011, 1012, 1016, 
	1020, 1024, 1028, 1032, 1036, 1040, 1044, 1048, 
	1052, 1056, 1060, 1061, 1062, 1063, 1064, 1065, 
	1069, 1073, 1077, 1081, 1085, 1089, 1093, 1097, 
	1098, 1102, 1106, 1110, 1114, 1115, 1119, 1123, 
	1127, 1131, 1132, 1136, 1140, 1144, 1148, 1149, 
	1153, 1157, 1161, 1165, 1169, 1173, 1177, 1181, 
	1185, 1189, 1193, 1197, 1198, 1199, 1200, 1201, 
	1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 
	1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 
	1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 
	1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 
	1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 
	1242, 1243, 1244, 1245, 1248, 1252, 1253, 1257, 
	1257, 1259
};

static const char _visual_studio_parser_trans_keys[] = {
	-17, -69, -65, 13, 10, 77, 105, 99, 
	114, 111, 115, 111, 102, 116, 32, 86, 
	105, 115, 117, 97, 108, 32, 83, 116, 
	117, 100, 105, 111, 32, 83, 111, 108, 
	117, 116, 105, 111, 110, 32, 70, 105, 
	108, 101, 44, 32, 70, 111, 114, 109, 
	97, 116, 32, 86, 101, 114, 115, 105, 
	111, 110, 32, 46, 48, 57, 13, 46, 
	48, 57, 10, 35, 32, 86, 105, 115, 
	117, 97, 108, 32, 83, 116, 117, 100, 
	105, 111, 32, 46, 48, 57, 13, 46, 
	48, 57, 10, 108, 111, 98, 97, 108, 
	13, 10, 9, 69, 71, 108, 111, 98, 
	97, 108, 83, 101, 99, 116, 105, 111, 
	110, 40, 80, 83, 114, 111, 106, 101, 
	99, 116, 67, 111, 110, 102, 105, 103, 
	117, 114, 97, 116, 105, 111, 110, 80, 
	108, 97, 116, 102, 111, 114, 109, 115, 
	41, 32, 61, 32, 112, 111, 115, 116, 
	83, 111, 108, 117, 116, 105, 111, 110, 
	13, 10, 9, 9, 69, 123, 48, 57, 
	65, 70, 48, 57, 65, 70, 48, 57, 
	65, 70, 48, 57, 65, 70, 48, 57, 
	65, 70, 48, 57, 65, 70, 48, 57, 
	65, 70, 48, 57, 65, 70, 45, 48, 
	57, 65, 70, 48, 57, 65, 70, 48, 
	57, 65, 70, 48, 57, 65, 70, 45, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	45, 48, 57, 65, 70, 48, 57, 65, 
	70, 48, 57, 65, 70, 48, 57, 65, 
	70, 45, 48, 57, 65, 70, 48, 57, 
	65, 70, 48, 57, 65, 70, 48, 57, 
	65, 70, 48, 57, 65, 70, 48, 57, 
	65, 70, 48, 57, 65, 70, 48, 57, 
	65, 70, 48, 57, 65, 70, 48, 57, 
	65, 70, 48, 57, 65, 70, 48, 57, 
	65, 70, 125, 46, 46, 46, 9, 32, 
	9, 32, 61, 32, 9, 13, 32, 9, 
	13, 32, 9, 10, 13, 32, 9, 13, 
	32, 110, 100, 71, 108, 111, 98, 97, 
	108, 83, 101, 99, 116, 105, 111, 110, 
	13, 10, 9, 69, 71, 108, 111, 98, 
	97, 108, 83, 101, 99, 116, 105, 111, 
	110, 40, 80, 83, 111, 108, 117, 116, 
	105, 111, 110, 80, 114, 111, 112, 101, 
	114, 116, 105, 101, 115, 41, 32, 61, 
	32, 112, 114, 101, 83, 111, 108, 117, 
	116, 105, 111, 110, 13, 10, 9, 9, 
	69, 9, 32, 9, 32, 61, 32, 9, 
	13, 32, 9, 13, 32, 9, 10, 13, 
	32, 9, 13, 32, 110, 100, 71, 108, 
	111, 98, 97, 108, 83, 101, 99, 116, 
	105, 111, 110, 13, 10, 9, 69, 71, 
	108, 111, 98, 97, 108, 83, 101, 99, 
	116, 105, 111, 110, 40, 83, 110, 100, 
	71, 108, 111, 98, 97, 108, 13, 10, 
	111, 108, 117, 116, 105, 111, 110, 67, 
	80, 111, 110, 102, 105, 103, 117, 114, 
	97, 116, 105, 111, 110, 80, 108, 97, 
	116, 102, 111, 114, 109, 115, 41, 32, 
	61, 32, 112, 114, 101, 83, 111, 108, 
	117, 116, 105, 111, 110, 13, 10, 9, 
	9, 69, 9, 32, 9, 32, 61, 32, 
	9, 13, 32, 9, 13, 32, 9, 10, 
	13, 32, 9, 13, 32, 110, 100, 71, 
	108, 111, 98, 97, 108, 83, 101, 99, 
	116, 105, 111, 110, 105, 110, 105, 109, 
	117, 109, 86, 105, 115, 117, 97, 108, 
	83, 116, 117, 100, 105, 111, 86, 101, 
	114, 115, 105, 111, 110, 32, 61, 32, 
	46, 48, 57, 13, 46, 48, 57, 10, 
	114, 111, 106, 101, 99, 116, 40, 34, 
	123, 48, 57, 65, 70, 48, 57, 65, 
	70, 48, 57, 65, 70, 48, 57, 65, 
	70, 48, 57, 65, 70, 48, 57, 65, 
	70, 48, 57, 65, 70, 48, 57, 65, 
	70, 45, 48, 57, 65, 70, 48, 57, 
	65, 70, 48, 57, 65, 70, 48, 57, 
	65, 70, 45, 48, 57, 65, 70, 48, 
	57, 65, 70, 48, 57, 65, 70, 48, 
	57, 65, 70, 45, 48, 57, 65, 70, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	48, 57, 65, 70, 45, 48, 57, 65, 
	70, 48, 57, 65, 70, 48, 57, 65, 
	70, 48, 57, 65, 70, 48, 57, 65, 
	70, 48, 57, 65, 70, 48, 57, 65, 
	70, 48, 57, 65, 70, 48, 57, 65, 
	70, 48, 57, 65, 70, 48, 57, 65, 
	70, 48, 57, 65, 70, 125, 34, 41, 
	32, 61, 32, 34, 34, 34, 44, 32, 
	34, 34, 34, 44, 32, 34, 123, 48, 
	57, 65, 70, 48, 57, 65, 70, 48, 
	57, 65, 70, 48, 57, 65, 70, 48, 
	57, 65, 70, 48, 57, 65, 70, 48, 
	57, 65, 70, 48, 57, 65, 70, 45, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	45, 48, 57, 65, 70, 48, 57, 65, 
	70, 48, 57, 65, 70, 48, 57, 65, 
	70, 45, 48, 57, 65, 70, 48, 57, 
	65, 70, 48, 57, 65, 70, 48, 57, 
	65, 70, 45, 48, 57, 65, 70, 48, 
	57, 65, 70, 48, 57, 65, 70, 48, 
	57, 65, 70, 48, 57, 65, 70, 48, 
	57, 65, 70, 48, 57, 65, 70, 48, 
	57, 65, 70, 48, 57, 65, 70, 48, 
	57, 65, 70, 48, 57, 65, 70, 48, 
	57, 65, 70, 125, 34, 13, 10, 9, 
	69, 80, 114, 111, 106, 101, 99, 116, 
	83, 101, 99, 116, 105, 111, 110, 40, 
	80, 114, 111, 106, 101, 99, 116, 68, 
	101, 112, 101, 110, 100, 101, 110, 99, 
	105, 101, 115, 41, 32, 61, 32, 112, 
	111, 115, 116, 80, 114, 111, 106, 101, 
	99, 116, 13, 10, 9, 9, 69, 123, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	45, 48, 57, 65, 70, 48, 57, 65, 
	70, 48, 57, 65, 70, 48, 57, 65, 
	70, 45, 48, 57, 65, 70, 48, 57, 
	65, 70, 48, 57, 65, 70, 48, 57, 
	65, 70, 45, 48, 57, 65, 70, 48, 
	57, 65, 70, 48, 57, 65, 70, 48, 
	57, 65, 70, 45, 48, 57, 65, 70, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	48, 57, 65, 70, 125, 32, 61, 32, 
	123, 48, 57, 65, 70, 48, 57, 65, 
	70, 48, 57, 65, 70, 48, 57, 65, 
	70, 48, 57, 65, 70, 48, 57, 65, 
	70, 48, 57, 65, 70, 48, 57, 65, 
	70, 45, 48, 57, 65, 70, 48, 57, 
	65, 70, 48, 57, 65, 70, 48, 57, 
	65, 70, 45, 48, 57, 65, 70, 48, 
	57, 65, 70, 48, 57, 65, 70, 48, 
	57, 65, 70, 45, 48, 57, 65, 70, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	48, 57, 65, 70, 45, 48, 57, 65, 
	70, 48, 57, 65, 70, 48, 57, 65, 
	70, 48, 57, 65, 70, 48, 57, 65, 
	70, 48, 57, 65, 70, 48, 57, 65, 
	70, 48, 57, 65, 70, 48, 57, 65, 
	70, 48, 57, 65, 70, 48, 57, 65, 
	70, 48, 57, 65, 70, 125, 110, 100, 
	80, 114, 111, 106, 101, 99, 116, 83, 
	101, 99, 116, 105, 111, 110, 110, 100, 
	80, 114, 111, 106, 101, 99, 116, 13, 
	105, 115, 117, 97, 108, 83, 116, 117, 
	100, 105, 111, 86, 101, 114, 115, 105, 
	111, 110, 32, 61, 32, 46, 48, 57, 
	13, 46, 48, 57, 10, 71, 77, 80, 
	86, 71, 80, 71, 77, 80, 0
};

static const char _visual_studio_parser_single_lengths[] = {
	0, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 2, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	2, 1, 1, 1, 1, 1, 1, 1, 
	1, 2, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	2, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	2, 1, 0, 0, 0, 0, 0, 0, 
	0, 0, 1, 0, 0, 0, 0, 1, 
	0, 0, 0, 0, 1, 0, 0, 0, 
	0, 1, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 1, 1, 
	1, 1, 2, 2, 1, 1, 3, 3, 
	4, 3, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 2, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 2, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 2, 2, 
	2, 1, 1, 3, 3, 4, 3, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	2, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 2, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 2, 2, 2, 1, 1, 3, 3, 
	4, 3, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 2, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 0, 0, 0, 0, 0, 0, 0, 
	0, 1, 0, 0, 0, 0, 1, 0, 
	0, 0, 0, 1, 0, 0, 0, 0, 
	1, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 0, 
	0, 0, 0, 0, 0, 0, 0, 1, 
	0, 0, 0, 0, 1, 0, 0, 0, 
	0, 1, 0, 0, 0, 0, 1, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 1, 1, 1, 1, 2, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 2, 1, 0, 0, 
	0, 0, 0, 0, 0, 0, 1, 0, 
	0, 0, 0, 1, 0, 0, 0, 0, 
	1, 0, 0, 0, 0, 1, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 1, 1, 1, 1, 1, 0, 
	0, 0, 0, 0, 0, 0, 0, 1, 
	0, 0, 0, 0, 1, 0, 0, 0, 
	0, 1, 0, 0, 0, 0, 1, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 2, 1, 4, 0, 
	2, 3
};

static const char _visual_studio_parser_range_lengths[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 1, 1, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 1, 
	1, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 2, 2, 2, 2, 2, 2, 
	2, 2, 0, 2, 2, 2, 2, 0, 
	2, 2, 2, 2, 0, 2, 2, 2, 
	2, 0, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 1, 1, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 2, 2, 2, 2, 2, 2, 2, 
	2, 0, 2, 2, 2, 2, 0, 2, 
	2, 2, 2, 0, 2, 2, 2, 2, 
	0, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 2, 
	2, 2, 2, 2, 2, 2, 2, 0, 
	2, 2, 2, 2, 0, 2, 2, 2, 
	2, 0, 2, 2, 2, 2, 0, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 2, 2, 
	2, 2, 2, 2, 2, 2, 0, 2, 
	2, 2, 2, 0, 2, 2, 2, 2, 
	0, 2, 2, 2, 2, 0, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 0, 0, 0, 0, 0, 2, 
	2, 2, 2, 2, 2, 2, 2, 0, 
	2, 2, 2, 2, 0, 2, 2, 2, 
	2, 0, 2, 2, 2, 2, 0, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 1, 1, 0, 0, 0, 
	0, 0
};

static const short _visual_studio_parser_index_offsets[] = {
	0, 0, 2, 4, 6, 8, 10, 12, 
	14, 16, 18, 20, 22, 24, 26, 28, 
	30, 32, 34, 36, 38, 40, 42, 44, 
	46, 48, 50, 52, 54, 56, 58, 60, 
	62, 64, 66, 68, 70, 72, 74, 76, 
	78, 80, 82, 84, 86, 88, 90, 92, 
	94, 96, 98, 100, 102, 104, 106, 108, 
	110, 112, 114, 116, 118, 121, 125, 127, 
	129, 131, 133, 135, 137, 139, 141, 143, 
	145, 147, 149, 151, 153, 155, 157, 159, 
	162, 166, 168, 170, 172, 174, 176, 178, 
	180, 182, 185, 187, 189, 191, 193, 195, 
	197, 199, 201, 203, 205, 207, 209, 211, 
	213, 216, 218, 220, 222, 224, 226, 228, 
	230, 232, 234, 236, 238, 240, 242, 244, 
	246, 248, 250, 252, 254, 256, 258, 260, 
	262, 264, 266, 268, 270, 272, 274, 276, 
	278, 280, 282, 284, 286, 288, 290, 292, 
	294, 296, 298, 300, 302, 304, 306, 308, 
	310, 313, 315, 318, 321, 324, 327, 330, 
	333, 336, 339, 341, 344, 347, 350, 353, 
	355, 358, 361, 364, 367, 369, 372, 375, 
	378, 381, 383, 386, 389, 392, 395, 398, 
	401, 404, 407, 410, 413, 416, 419, 421, 
	423, 425, 427, 430, 433, 435, 437, 441, 
	445, 450, 454, 456, 458, 460, 462, 464, 
	466, 468, 470, 472, 474, 476, 478, 480, 
	482, 484, 486, 488, 491, 493, 495, 497, 
	499, 501, 503, 505, 507, 509, 511, 513, 
	515, 517, 519, 522, 524, 526, 528, 530, 
	532, 534, 536, 538, 540, 542, 544, 546, 
	548, 550, 552, 554, 556, 558, 560, 562, 
	564, 566, 568, 570, 572, 574, 576, 578, 
	580, 582, 584, 586, 588, 590, 592, 595, 
	598, 601, 603, 605, 609, 613, 618, 622, 
	624, 626, 628, 630, 632, 634, 636, 638, 
	640, 642, 644, 646, 648, 650, 652, 654, 
	656, 659, 661, 663, 665, 667, 669, 671, 
	673, 675, 677, 679, 681, 683, 685, 687, 
	689, 691, 693, 695, 697, 699, 701, 703, 
	705, 707, 709, 711, 713, 715, 717, 719, 
	721, 723, 726, 728, 730, 732, 734, 736, 
	738, 740, 742, 744, 746, 748, 750, 752, 
	754, 756, 758, 760, 762, 764, 766, 768, 
	770, 772, 774, 776, 778, 780, 782, 784, 
	786, 788, 790, 792, 794, 796, 798, 800, 
	802, 804, 807, 810, 813, 815, 817, 821, 
	825, 830, 834, 836, 838, 840, 842, 844, 
	846, 848, 850, 852, 854, 856, 858, 860, 
	862, 864, 866, 868, 870, 872, 874, 876, 
	878, 880, 882, 884, 886, 888, 890, 892, 
	894, 896, 898, 900, 902, 904, 906, 908, 
	910, 912, 914, 916, 918, 920, 923, 927, 
	929, 931, 933, 935, 937, 939, 941, 943, 
	945, 947, 950, 953, 956, 959, 962, 965, 
	968, 971, 973, 976, 979, 982, 985, 987, 
	990, 993, 996, 999, 1001, 1004, 1007, 1010, 
	1013, 1015, 1018, 1021, 1024, 1027, 1030, 1033, 
	1036, 1039, 1042, 1045, 1048, 1051, 1053, 1055, 
	1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 
	1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 
	1090, 1093, 1096, 1099, 1102, 1105, 1108, 1111, 
	1113, 1116, 1119, 1122, 1125, 1127, 1130, 1133, 
	1136, 1139, 1141, 1144, 1147, 1150, 1153, 1155, 
	1158, 1161, 1164, 1167, 1170, 1173, 1176, 1179, 
	1182, 1185, 1188, 1191, 1193, 1195, 1197, 1199, 
	1202, 1204, 1206, 1208, 1210, 1212, 1214, 1216, 
	1218, 1220, 1222, 1224, 1226, 1228, 1230, 1232, 
	1234, 1236, 1238, 1240, 1242, 1244, 1246, 1248, 
	1250, 1252, 1254, 1256, 1258, 1260, 1262, 1264, 
	1266, 1268, 1270, 1272, 1274, 1276, 1278, 1280, 
	1282, 1284, 1286, 1288, 1290, 1292, 1294, 1296, 
	1298, 1300, 1302, 1304, 1306, 1309, 1311, 1314, 
	1317, 1320, 1323, 1326, 1329, 1332, 1335, 1337, 
	1340, 1343, 1346, 1349, 1351, 1354, 1357, 1360, 
	1363, 1365, 1368, 1371, 1374, 1377, 1379, 1382, 
	1385, 1388, 1391, 1394, 1397, 1400, 1403, 1406, 
	1409, 1412, 1415, 1417, 1419, 1421, 1423, 1425, 
	1428, 1431, 1434, 1437, 1440, 1443, 1446, 1449, 
	1451, 1454, 1457, 1460, 1463, 1465, 1468, 1471, 
	1474, 1477, 1479, 1482, 1485, 1488, 1491, 1493, 
	1496, 1499, 1502, 1505, 1508, 1511, 1514, 1517, 
	1520, 1523, 1526, 1529, 1531, 1533, 1535, 1537, 
	1539, 1541, 1543, 1545, 1547, 1549, 1551, 1553, 
	1555, 1557, 1559, 1561, 1563, 1565, 1567, 1569, 
	1571, 1573, 1575, 1577, 1579, 1581, 1583, 1585, 
	1587, 1589, 1591, 1593, 1595, 1597, 1599, 1601, 
	1603, 1605, 1607, 1609, 1611, 1613, 1615, 1617, 
	1619, 1621, 1623, 1625, 1628, 1632, 1634, 1639, 
	1640, 1643
};

static const short _visual_studio_parser_trans_targs[] = {
	2, 0, 3, 0, 4, 0, 5, 0, 
	6, 0, 7, 0, 8, 0, 9, 0, 
	10, 0, 11, 0, 12, 0, 13, 0, 
	14, 0, 15, 0, 16, 0, 17, 0, 
	18, 0, 19, 0, 20, 0, 21, 0, 
	22, 0, 23, 0, 24, 0, 25, 0, 
	26, 0, 27, 0, 28, 0, 29, 0, 
	30, 0, 31, 0, 32, 0, 33, 0, 
	34, 0, 35, 0, 36, 0, 37, 0, 
	38, 0, 39, 0, 40, 0, 41, 0, 
	42, 0, 43, 0, 44, 0, 45, 0, 
	46, 0, 47, 0, 48, 0, 49, 0, 
	50, 0, 51, 0, 52, 0, 53, 0, 
	54, 0, 55, 0, 56, 0, 57, 0, 
	58, 0, 59, 0, 60, 0, 61, 61, 
	0, 62, 61, 61, 0, 63, 0, 64, 
	0, 65, 0, 66, 0, 67, 0, 68, 
	0, 69, 0, 70, 0, 71, 0, 72, 
	0, 73, 0, 74, 0, 75, 0, 76, 
	0, 77, 0, 78, 0, 79, 0, 80, 
	80, 0, 81, 80, 80, 0, 710, 0, 
	83, 0, 84, 0, 85, 0, 86, 0, 
	87, 0, 88, 0, 89, 0, 90, 312, 
	0, 91, 0, 92, 0, 93, 0, 94, 
	0, 95, 0, 96, 0, 97, 0, 98, 
	0, 99, 0, 100, 0, 101, 0, 102, 
	0, 103, 0, 104, 0, 105, 322, 0, 
	106, 0, 107, 0, 108, 0, 109, 0, 
	110, 0, 111, 0, 112, 0, 113, 0, 
	114, 0, 115, 0, 116, 0, 117, 0, 
	118, 0, 119, 0, 120, 0, 121, 0, 
	122, 0, 123, 0, 124, 0, 125, 0, 
	126, 0, 127, 0, 128, 0, 129, 0, 
	130, 0, 131, 0, 132, 0, 133, 0, 
	134, 0, 135, 0, 136, 0, 137, 0, 
	138, 0, 139, 0, 140, 0, 141, 0, 
	142, 0, 143, 0, 144, 0, 145, 0, 
	146, 0, 147, 0, 148, 0, 149, 0, 
	150, 0, 151, 0, 152, 0, 153, 202, 
	0, 154, 0, 155, 155, 0, 156, 156, 
	0, 157, 157, 0, 158, 158, 0, 159, 
	159, 0, 160, 160, 0, 161, 161, 0, 
	162, 162, 0, 163, 0, 164, 164, 0, 
	165, 165, 0, 166, 166, 0, 167, 167, 
	0, 168, 0, 169, 169, 0, 170, 170, 
	0, 171, 171, 0, 172, 172, 0, 173, 
	0, 174, 174, 0, 175, 175, 0, 176, 
	176, 0, 177, 177, 0, 178, 0, 179, 
	179, 0, 180, 180, 0, 181, 181, 0, 
	182, 182, 0, 183, 183, 0, 184, 184, 
	0, 185, 185, 0, 186, 186, 0, 187, 
	187, 0, 188, 188, 0, 189, 189, 0, 
	190, 190, 0, 191, 0, 192, 0, 0, 
	193, 194, 193, 0, 0, 195, 0, 196, 
	195, 197, 0, 198, 0, 0, 200, 0, 
	199, 0, 200, 0, 199, 0, 201, 200, 
	0, 199, 152, 200, 0, 199, 203, 0, 
	204, 0, 205, 0, 206, 0, 207, 0, 
	208, 0, 209, 0, 210, 0, 211, 0, 
	212, 0, 213, 0, 214, 0, 215, 0, 
	216, 0, 217, 0, 218, 0, 219, 0, 
	220, 312, 0, 221, 0, 222, 0, 223, 
	0, 224, 0, 225, 0, 226, 0, 227, 
	0, 228, 0, 229, 0, 230, 0, 231, 
	0, 232, 0, 233, 0, 234, 0, 105, 
	235, 0, 236, 0, 237, 0, 238, 0, 
	239, 0, 240, 0, 241, 0, 242, 0, 
	243, 0, 244, 0, 245, 0, 246, 0, 
	247, 0, 248, 0, 249, 0, 250, 0, 
	251, 0, 252, 0, 253, 0, 254, 0, 
	255, 0, 256, 0, 257, 0, 258, 0, 
	259, 0, 260, 0, 261, 0, 262, 0, 
	263, 0, 264, 0, 265, 0, 266, 0, 
	267, 0, 268, 0, 269, 0, 270, 0, 
	271, 279, 0, 0, 273, 272, 0, 273, 
	272, 274, 0, 275, 0, 0, 277, 0, 
	276, 0, 277, 0, 276, 0, 278, 277, 
	0, 276, 270, 277, 0, 276, 280, 0, 
	281, 0, 282, 0, 283, 0, 284, 0, 
	285, 0, 286, 0, 287, 0, 288, 0, 
	289, 0, 290, 0, 291, 0, 292, 0, 
	293, 0, 294, 0, 295, 0, 296, 0, 
	297, 312, 0, 298, 0, 299, 0, 300, 
	0, 301, 0, 302, 0, 303, 0, 304, 
	0, 305, 0, 306, 0, 307, 0, 308, 
	0, 309, 0, 310, 0, 311, 0, 235, 
	0, 313, 0, 314, 0, 315, 0, 316, 
	0, 317, 0, 318, 0, 319, 0, 320, 
	0, 321, 0, 711, 0, 323, 0, 324, 
	0, 325, 0, 326, 0, 327, 0, 328, 
	0, 329, 0, 330, 243, 0, 331, 0, 
	332, 0, 333, 0, 334, 0, 335, 0, 
	336, 0, 337, 0, 338, 0, 339, 0, 
	340, 0, 341, 0, 342, 0, 343, 0, 
	344, 0, 345, 0, 346, 0, 347, 0, 
	348, 0, 349, 0, 350, 0, 351, 0, 
	352, 0, 353, 0, 354, 0, 355, 0, 
	356, 0, 357, 0, 358, 0, 359, 0, 
	360, 0, 361, 0, 362, 0, 363, 0, 
	364, 0, 365, 0, 366, 0, 367, 0, 
	368, 0, 369, 0, 370, 378, 0, 0, 
	372, 371, 0, 372, 371, 373, 0, 374, 
	0, 0, 376, 0, 375, 0, 376, 0, 
	375, 0, 377, 376, 0, 375, 369, 376, 
	0, 375, 379, 0, 380, 0, 381, 0, 
	382, 0, 383, 0, 384, 0, 385, 0, 
	386, 0, 387, 0, 388, 0, 389, 0, 
	390, 0, 391, 0, 392, 0, 87, 0, 
	394, 0, 395, 0, 396, 0, 397, 0, 
	398, 0, 399, 0, 400, 0, 401, 0, 
	402, 0, 403, 0, 404, 0, 405, 0, 
	406, 0, 407, 0, 408, 0, 409, 0, 
	410, 0, 411, 0, 412, 0, 413, 0, 
	414, 0, 415, 0, 416, 0, 417, 0, 
	418, 0, 419, 0, 420, 0, 421, 0, 
	422, 422, 0, 423, 422, 422, 0, 712, 
	0, 425, 0, 426, 0, 427, 0, 428, 
	0, 429, 0, 430, 0, 431, 0, 432, 
	0, 433, 0, 434, 434, 0, 435, 435, 
	0, 436, 436, 0, 437, 437, 0, 438, 
	438, 0, 439, 439, 0, 440, 440, 0, 
	441, 441, 0, 442, 0, 443, 443, 0, 
	444, 444, 0, 445, 445, 0, 446, 446, 
	0, 447, 0, 448, 448, 0, 449, 449, 
	0, 450, 450, 0, 451, 451, 0, 452, 
	0, 453, 453, 0, 454, 454, 0, 455, 
	455, 0, 456, 456, 0, 457, 0, 458, 
	458, 0, 459, 459, 0, 460, 460, 0, 
	461, 461, 0, 462, 462, 0, 463, 463, 
	0, 464, 464, 0, 465, 465, 0, 466, 
	466, 0, 467, 467, 0, 468, 468, 0, 
	469, 469, 0, 470, 0, 471, 0, 472, 
	0, 473, 0, 474, 0, 475, 0, 476, 
	0, 478, 477, 478, 477, 479, 0, 480, 
	0, 481, 0, 483, 482, 483, 482, 484, 
	0, 485, 0, 486, 0, 487, 0, 488, 
	488, 0, 489, 489, 0, 490, 490, 0, 
	491, 491, 0, 492, 492, 0, 493, 493, 
	0, 494, 494, 0, 495, 495, 0, 496, 
	0, 497, 497, 0, 498, 498, 0, 499, 
	499, 0, 500, 500, 0, 501, 0, 502, 
	502, 0, 503, 503, 0, 504, 504, 0, 
	505, 505, 0, 506, 0, 507, 507, 0, 
	508, 508, 0, 509, 509, 0, 510, 510, 
	0, 511, 0, 512, 512, 0, 513, 513, 
	0, 514, 514, 0, 515, 515, 0, 516, 
	516, 0, 517, 517, 0, 518, 518, 0, 
	519, 519, 0, 520, 520, 0, 521, 521, 
	0, 522, 522, 0, 523, 523, 0, 524, 
	0, 525, 0, 526, 0, 527, 0, 528, 
	676, 0, 529, 0, 530, 0, 531, 0, 
	532, 0, 533, 0, 534, 0, 535, 0, 
	536, 0, 537, 0, 538, 0, 539, 0, 
	540, 0, 541, 0, 542, 0, 543, 0, 
	544, 0, 545, 0, 546, 0, 547, 0, 
	548, 0, 549, 0, 550, 0, 551, 0, 
	552, 0, 553, 0, 554, 0, 555, 0, 
	556, 0, 557, 0, 558, 0, 559, 0, 
	560, 0, 561, 0, 562, 0, 563, 0, 
	564, 0, 565, 0, 566, 0, 567, 0, 
	568, 0, 569, 0, 570, 0, 571, 0, 
	572, 0, 573, 0, 574, 0, 575, 0, 
	576, 0, 577, 0, 578, 0, 579, 0, 
	580, 0, 581, 660, 0, 582, 0, 583, 
	583, 0, 584, 584, 0, 585, 585, 0, 
	586, 586, 0, 587, 587, 0, 588, 588, 
	0, 589, 589, 0, 590, 590, 0, 591, 
	0, 592, 592, 0, 593, 593, 0, 594, 
	594, 0, 595, 595, 0, 596, 0, 597, 
	597, 0, 598, 598, 0, 599, 599, 0, 
	600, 600, 0, 601, 0, 602, 602, 0, 
	603, 603, 0, 604, 604, 0, 605, 605, 
	0, 606, 0, 607, 607, 0, 608, 608, 
	0, 609, 609, 0, 610, 610, 0, 611, 
	611, 0, 612, 612, 0, 613, 613, 0, 
	614, 614, 0, 615, 615, 0, 616, 616, 
	0, 617, 617, 0, 618, 618, 0, 619, 
	0, 620, 0, 621, 0, 622, 0, 623, 
	0, 624, 624, 0, 625, 625, 0, 626, 
	626, 0, 627, 627, 0, 628, 628, 0, 
	629, 629, 0, 630, 630, 0, 631, 631, 
	0, 632, 0, 633, 633, 0, 634, 634, 
	0, 635, 635, 0, 636, 636, 0, 637, 
	0, 638, 638, 0, 639, 639, 0, 640, 
	640, 0, 641, 641, 0, 642, 0, 643, 
	643, 0, 644, 644, 0, 645, 645, 0, 
	646, 646, 0, 647, 0, 648, 648, 0, 
	649, 649, 0, 650, 650, 0, 651, 651, 
	0, 652, 652, 0, 653, 653, 0, 654, 
	654, 0, 655, 655, 0, 656, 656, 0, 
	657, 657, 0, 658, 658, 0, 659, 659, 
	0, 577, 0, 661, 0, 662, 0, 663, 
	0, 664, 0, 665, 0, 666, 0, 667, 
	0, 668, 0, 669, 0, 670, 0, 671, 
	0, 672, 0, 673, 0, 674, 0, 675, 
	0, 525, 0, 677, 0, 678, 0, 679, 
	0, 680, 0, 681, 0, 682, 0, 683, 
	0, 684, 0, 685, 0, 423, 0, 687, 
	0, 688, 0, 689, 0, 690, 0, 691, 
	0, 692, 0, 693, 0, 694, 0, 695, 
	0, 696, 0, 697, 0, 698, 0, 699, 
	0, 700, 0, 701, 0, 702, 0, 703, 
	0, 704, 0, 705, 0, 706, 0, 707, 
	0, 708, 708, 0, 709, 708, 708, 0, 
	713, 0, 82, 393, 424, 686, 0, 0, 
	82, 424, 0, 82, 393, 424, 0, 0
};

static const char _visual_studio_parser_trans_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 1, 1, 
	0, 3, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 1, 
	1, 0, 5, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 1, 1, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 25, 0, 0, 0, 0, 
	1, 27, 0, 0, 0, 1, 0, 29, 
	0, 0, 0, 0, 0, 0, 51, 0, 
	1, 0, 31, 0, 0, 0, 0, 31, 
	0, 0, 0, 31, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 54, 1, 0, 33, 
	0, 0, 0, 0, 0, 0, 57, 0, 
	1, 0, 35, 0, 0, 0, 0, 35, 
	0, 0, 0, 35, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	45, 1, 0, 21, 0, 0, 0, 0, 
	0, 0, 48, 0, 1, 0, 23, 0, 
	0, 0, 0, 23, 0, 0, 0, 23, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	1, 1, 0, 9, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 1, 1, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 11, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 39, 1, 13, 0, 0, 0, 0, 
	0, 0, 0, 42, 1, 15, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 1, 
	1, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 17, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 1, 
	1, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 19, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 1, 1, 0, 7, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0
};

static const char _visual_studio_parser_eof_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 37, 37, 
	37, 37
};

static const int visual_studio_parser_start = 1;
static const int visual_studio_parser_first_final = 710;
static const int visual_studio_parser_error = 0;

static const int visual_studio_parser_en_main = 1;


#line 105 "sushi/visual_studio_parser.rl"

bool VisualStudioParser::parse(const char *buffer, size_t len)
{
    int cs = visual_studio_parser_en_main;
    
    const char *mark = NULL;
    const char *p = buffer;
    const char *pe = buffer + strlen(buffer);
    const char *eof = pe;

    
#line 1096 "sushi/visual_studio_parser.cc"
	{
	cs = visual_studio_parser_start;
	}

#line 116 "sushi/visual_studio_parser.rl"
    
#line 1103 "sushi/visual_studio_parser.cc"
	{
	int _klen;
	unsigned int _trans;
	const char *_acts;
	unsigned int _nacts;
	const char *_keys;

	if ( p == pe )
		goto _test_eof;
	if ( cs == 0 )
		goto _out;
_resume:
	_keys = _visual_studio_parser_trans_keys + _visual_studio_parser_key_offsets[cs];
	_trans = _visual_studio_parser_index_offsets[cs];

	_klen = _visual_studio_parser_single_lengths[cs];
	if ( _klen > 0 ) {
		const char *_lower = _keys;
		const char *_mid;
		const char *_upper = _keys + _klen - 1;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + ((_upper-_lower) >> 1);
			if ( (*p) < *_mid )
				_upper = _mid - 1;
			else if ( (*p) > *_mid )
				_lower = _mid + 1;
			else {
				_trans += (unsigned int)(_mid - _keys);
				goto _match;
			}
		}
		_keys += _klen;
		_trans += _klen;
	}

	_klen = _visual_studio_parser_range_lengths[cs];
	if ( _klen > 0 ) {
		const char *_lower = _keys;
		const char *_mid;
		const char *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( (*p) < _mid[0] )
				_upper = _mid - 2;
			else if ( (*p) > _mid[1] )
				_lower = _mid + 2;
			else {
				_trans += (unsigned int)((_mid - _keys)>>1);
				goto _match;
			}
		}
		_trans += _klen;
	}

_match:
	cs = _visual_studio_parser_trans_targs[_trans];

	if ( _visual_studio_parser_trans_actions[_trans] == 0 )
		goto _again;

	_acts = _visual_studio_parser_actions + _visual_studio_parser_trans_actions[_trans];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 )
	{
		switch ( *_acts++ )
		{
	case 0:
#line 17 "sushi/visual_studio_parser.rl"
	{ mark = p; }
	break;
	case 1:
#line 18 "sushi/visual_studio_parser.rl"
	{ FormatVersion(mark, p - mark); }
	break;
	case 2:
#line 19 "sushi/visual_studio_parser.rl"
	{ CommentVersion(mark, p - mark); }
	break;
	case 3:
#line 20 "sushi/visual_studio_parser.rl"
	{ VisualStudioVersion(mark, p - mark); }
	break;
	case 4:
#line 21 "sushi/visual_studio_parser.rl"
	{ MinimumVisualStudioVersion(mark, p - mark); }
	break;
	case 5:
#line 22 "sushi/visual_studio_parser.rl"
	{ ProjectTypeGUID(mark, p - mark); }
	break;
	case 6:
#line 23 "sushi/visual_studio_parser.rl"
	{ ProjectName(mark, p - mark); }
	break;
	case 7:
#line 24 "sushi/visual_studio_parser.rl"
	{ ProjectPath(mark, p - mark); }
	break;
	case 8:
#line 25 "sushi/visual_studio_parser.rl"
	{ ProjectGUID(mark, p - mark); }
	break;
	case 9:
#line 26 "sushi/visual_studio_parser.rl"
	{ ProjectDependsGUID(mark, p - mark); }
	break;
	case 10:
#line 27 "sushi/visual_studio_parser.rl"
	{ SolutionConfigPlatformKey(mark, p - mark); }
	break;
	case 11:
#line 28 "sushi/visual_studio_parser.rl"
	{ SolutionConfigPlatformValue(mark, p - mark); }
	break;
	case 12:
#line 29 "sushi/visual_studio_parser.rl"
	{ ProjectConfigPlatformGUID(mark, p - mark); }
	break;
	case 13:
#line 30 "sushi/visual_studio_parser.rl"
	{ ProjectConfigPlatformConfig(mark, p - mark); }
	break;
	case 14:
#line 31 "sushi/visual_studio_parser.rl"
	{ ProjectConfigPlatformProp(mark, p - mark); }
	break;
	case 15:
#line 32 "sushi/visual_studio_parser.rl"
	{ ProjectConfigPlatformValue(mark, p - mark); }
	break;
	case 16:
#line 33 "sushi/visual_studio_parser.rl"
	{ SolutionPropertiesKey(mark, p - mark); }
	break;
	case 17:
#line 34 "sushi/visual_studio_parser.rl"
	{ SolutionPropertiesValue(mark, p - mark); }
	break;
#line 1248 "sushi/visual_studio_parser.cc"
		}
	}

_again:
	if ( cs == 0 )
		goto _out;
	if ( ++p != pe )
		goto _resume;
	_test_eof: {}
	if ( p == eof )
	{
	const char *__acts = _visual_studio_parser_actions + _visual_studio_parser_eof_actions[cs];
	unsigned int __nacts = (unsigned int) *__acts++;
	while ( __nacts-- > 0 ) {
		switch ( *__acts++ ) {
	case 18:
#line 36 "sushi/visual_studio_parser.rl"
	{ 
        Done();
        {p++; goto _out; }
    }
	break;
#line 1271 "sushi/visual_studio_parser.cc"
		}
	}
	}

	_out: {}
	}

#line 117 "sushi/visual_studio_parser.rl"

    return (cs != visual_studio_parser_error || cs == visual_studio_parser_first_final);
}
