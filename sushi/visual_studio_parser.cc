
#line 1 "sushi/visual_studio_parser.rl"
//
//  project_parser.rl
//

#include <cstdio>
#include <cassert>
#include <cstdlib>
#include <cctype>
#include <cstring>

#include "visual_studio_parser.h"


#line 98 "sushi/visual_studio_parser.rl"



#line 21 "sushi/visual_studio_parser.cc"
static const char _visual_studio_parser_actions[] = {
	0, 1, 0, 1, 1, 1, 2, 1, 
	3, 1, 4, 1, 5, 1, 6, 1, 
	7, 1, 8, 1, 9, 1, 10, 1, 
	11, 1, 12, 1, 13, 1, 14, 1, 
	15, 1, 16, 1, 17, 2, 0, 6, 
	2, 0, 7, 2, 0, 11, 2, 0, 
	12, 2, 0, 13, 2, 0, 14, 2, 
	0, 15, 2, 0, 16
};

static const short _visual_studio_parser_key_offsets[] = {
	0, 0, 1, 2, 3, 4, 5, 6, 
	7, 8, 9, 10, 11, 12, 13, 14, 
	15, 16, 17, 18, 19, 20, 21, 22, 
	23, 24, 25, 26, 27, 28, 29, 30, 
	31, 32, 33, 34, 35, 36, 37, 38, 
	39, 40, 41, 42, 43, 44, 45, 46, 
	47, 48, 49, 50, 51, 52, 53, 54, 
	55, 56, 57, 58, 59, 62, 66, 67, 
	68, 69, 70, 71, 72, 73, 74, 75, 
	76, 77, 78, 79, 80, 81, 82, 83, 
	86, 90, 91, 92, 93, 94, 95, 96, 
	97, 98, 100, 101, 102, 103, 104, 105, 
	106, 107, 108, 109, 110, 111, 112, 113, 
	114, 116, 117, 118, 119, 120, 121, 122, 
	123, 124, 125, 126, 127, 128, 129, 130, 
	131, 132, 133, 134, 135, 136, 137, 138, 
	139, 140, 141, 142, 143, 144, 145, 146, 
	147, 148, 149, 150, 151, 152, 153, 154, 
	155, 156, 157, 158, 159, 160, 161, 162, 
	163, 165, 167, 169, 170, 171, 174, 177, 
	181, 184, 185, 186, 187, 188, 189, 190, 
	191, 192, 193, 194, 195, 196, 197, 198, 
	199, 200, 201, 203, 204, 205, 206, 207, 
	208, 209, 210, 211, 212, 213, 214, 215, 
	216, 217, 219, 220, 221, 222, 223, 224, 
	225, 226, 227, 228, 229, 230, 231, 232, 
	233, 234, 235, 236, 237, 238, 239, 240, 
	241, 242, 243, 244, 245, 246, 247, 248, 
	249, 250, 251, 252, 253, 254, 256, 258, 
	260, 261, 262, 265, 268, 272, 275, 276, 
	277, 278, 279, 280, 281, 282, 283, 284, 
	285, 286, 287, 288, 289, 290, 291, 292, 
	294, 295, 296, 297, 298, 299, 300, 301, 
	302, 303, 304, 305, 306, 307, 308, 309, 
	310, 311, 312, 313, 314, 315, 316, 317, 
	318, 319, 320, 321, 322, 323, 324, 325, 
	326, 328, 329, 330, 331, 332, 333, 334, 
	335, 336, 337, 338, 339, 340, 341, 342, 
	343, 344, 345, 346, 347, 348, 349, 350, 
	351, 352, 353, 354, 355, 356, 357, 358, 
	359, 360, 361, 362, 363, 364, 365, 366, 
	367, 369, 371, 373, 374, 375, 378, 381, 
	385, 388, 389, 390, 391, 392, 393, 394, 
	395, 396, 397, 398, 399, 400, 401, 402, 
	403, 404, 405, 406, 407, 408, 409, 410, 
	411, 412, 413, 414, 415, 416, 417, 418, 
	419, 420, 421, 422, 423, 424, 425, 426, 
	427, 428, 429, 430, 431, 434, 438, 439, 
	440, 441, 442, 443, 444, 445, 446, 447, 
	448, 452, 456, 460, 464, 468, 472, 476, 
	480, 481, 485, 489, 493, 497, 498, 502, 
	506, 510, 514, 515, 519, 523, 527, 531, 
	532, 536, 540, 544, 548, 552, 556, 560, 
	564, 568, 572, 576, 580, 581, 582, 583, 
	584, 585, 586, 587, 588, 589, 590, 591, 
	592, 593, 594, 595, 596, 597, 598, 602, 
	606, 610, 614, 618, 622, 626, 630, 631, 
	635, 639, 643, 647, 648, 652, 656, 660, 
	664, 665, 669, 673, 677, 681, 682, 686, 
	690, 694, 698, 702, 706, 710, 714, 718, 
	722, 726, 730, 731, 732, 733, 734, 736, 
	737, 738, 739, 740, 741, 742, 743, 744, 
	745, 746, 747, 748, 749, 750, 751, 752, 
	753, 754, 755, 756, 757, 758, 759, 760, 
	761, 762, 763, 764, 765, 766, 767, 768, 
	769, 770, 771, 772, 773, 774, 775, 776, 
	777, 778, 779, 780, 781, 782, 783, 784, 
	785, 786, 787, 788, 790, 791, 795, 799, 
	803, 807, 811, 815, 819, 823, 824, 828, 
	832, 836, 840, 841, 845, 849, 853, 857, 
	858, 862, 866, 870, 874, 875, 879, 883, 
	887, 891, 895, 899, 903, 907, 911, 915, 
	919, 923, 924, 925, 926, 927, 928, 932, 
	936, 940, 944, 948, 952, 956, 960, 961, 
	965, 969, 973, 977, 978, 982, 986, 990, 
	994, 995, 999, 1003, 1007, 1011, 1012, 1016, 
	1020, 1024, 1028, 1032, 1036, 1040, 1044, 1048, 
	1052, 1056, 1060, 1061, 1062, 1063, 1064, 1065, 
	1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 
	1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 
	1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 
	1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 
	1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 
	1106, 1107, 1108, 1111, 1115, 1116, 1120, 1120, 
	1122
};

static const char _visual_studio_parser_trans_keys[] = {
	-17, -69, -65, 13, 10, 77, 105, 99, 
	114, 111, 115, 111, 102, 116, 32, 86, 
	105, 115, 117, 97, 108, 32, 83, 116, 
	117, 100, 105, 111, 32, 83, 111, 108, 
	117, 116, 105, 111, 110, 32, 70, 105, 
	108, 101, 44, 32, 70, 111, 114, 109, 
	97, 116, 32, 86, 101, 114, 115, 105, 
	111, 110, 32, 46, 48, 57, 13, 46, 
	48, 57, 10, 35, 32, 86, 105, 115, 
	117, 97, 108, 32, 83, 116, 117, 100, 
	105, 111, 32, 46, 48, 57, 13, 46, 
	48, 57, 10, 108, 111, 98, 97, 108, 
	13, 10, 9, 69, 71, 108, 111, 98, 
	97, 108, 83, 101, 99, 116, 105, 111, 
	110, 40, 80, 83, 114, 111, 106, 101, 
	99, 116, 67, 111, 110, 102, 105, 103, 
	117, 114, 97, 116, 105, 111, 110, 80, 
	108, 97, 116, 102, 111, 114, 109, 115, 
	41, 32, 61, 32, 112, 111, 115, 116, 
	83, 111, 108, 117, 116, 105, 111, 110, 
	13, 10, 9, 9, 69, 9, 32, 9, 
	32, 61, 32, 9, 13, 32, 9, 13, 
	32, 9, 10, 13, 32, 9, 13, 32, 
	110, 100, 71, 108, 111, 98, 97, 108, 
	83, 101, 99, 116, 105, 111, 110, 13, 
	10, 9, 69, 71, 108, 111, 98, 97, 
	108, 83, 101, 99, 116, 105, 111, 110, 
	40, 80, 83, 111, 108, 117, 116, 105, 
	111, 110, 80, 114, 111, 112, 101, 114, 
	116, 105, 101, 115, 41, 32, 61, 32, 
	112, 114, 101, 83, 111, 108, 117, 116, 
	105, 111, 110, 13, 10, 9, 9, 69, 
	9, 32, 9, 32, 61, 32, 9, 13, 
	32, 9, 13, 32, 9, 10, 13, 32, 
	9, 13, 32, 110, 100, 71, 108, 111, 
	98, 97, 108, 83, 101, 99, 116, 105, 
	111, 110, 13, 10, 9, 69, 71, 108, 
	111, 98, 97, 108, 83, 101, 99, 116, 
	105, 111, 110, 40, 83, 110, 100, 71, 
	108, 111, 98, 97, 108, 13, 10, 111, 
	108, 117, 116, 105, 111, 110, 67, 80, 
	111, 110, 102, 105, 103, 117, 114, 97, 
	116, 105, 111, 110, 80, 108, 97, 116, 
	102, 111, 114, 109, 115, 41, 32, 61, 
	32, 112, 114, 101, 83, 111, 108, 117, 
	116, 105, 111, 110, 13, 10, 9, 9, 
	69, 9, 32, 9, 32, 61, 32, 9, 
	13, 32, 9, 13, 32, 9, 10, 13, 
	32, 9, 13, 32, 110, 100, 71, 108, 
	111, 98, 97, 108, 83, 101, 99, 116, 
	105, 111, 110, 105, 110, 105, 109, 117, 
	109, 86, 105, 115, 117, 97, 108, 83, 
	116, 117, 100, 105, 111, 86, 101, 114, 
	115, 105, 111, 110, 32, 61, 32, 46, 
	48, 57, 13, 46, 48, 57, 10, 114, 
	111, 106, 101, 99, 116, 40, 34, 123, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	45, 48, 57, 65, 70, 48, 57, 65, 
	70, 48, 57, 65, 70, 48, 57, 65, 
	70, 45, 48, 57, 65, 70, 48, 57, 
	65, 70, 48, 57, 65, 70, 48, 57, 
	65, 70, 45, 48, 57, 65, 70, 48, 
	57, 65, 70, 48, 57, 65, 70, 48, 
	57, 65, 70, 45, 48, 57, 65, 70, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	48, 57, 65, 70, 125, 34, 41, 32, 
	61, 32, 34, 34, 34, 44, 32, 34, 
	34, 34, 44, 32, 34, 123, 48, 57, 
	65, 70, 48, 57, 65, 70, 48, 57, 
	65, 70, 48, 57, 65, 70, 48, 57, 
	65, 70, 48, 57, 65, 70, 48, 57, 
	65, 70, 48, 57, 65, 70, 45, 48, 
	57, 65, 70, 48, 57, 65, 70, 48, 
	57, 65, 70, 48, 57, 65, 70, 45, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	45, 48, 57, 65, 70, 48, 57, 65, 
	70, 48, 57, 65, 70, 48, 57, 65, 
	70, 45, 48, 57, 65, 70, 48, 57, 
	65, 70, 48, 57, 65, 70, 48, 57, 
	65, 70, 48, 57, 65, 70, 48, 57, 
	65, 70, 48, 57, 65, 70, 48, 57, 
	65, 70, 48, 57, 65, 70, 48, 57, 
	65, 70, 48, 57, 65, 70, 48, 57, 
	65, 70, 125, 34, 13, 10, 9, 69, 
	80, 114, 111, 106, 101, 99, 116, 83, 
	101, 99, 116, 105, 111, 110, 40, 80, 
	114, 111, 106, 101, 99, 116, 68, 101, 
	112, 101, 110, 100, 101, 110, 99, 105, 
	101, 115, 41, 32, 61, 32, 112, 111, 
	115, 116, 80, 114, 111, 106, 101, 99, 
	116, 13, 10, 9, 9, 69, 123, 48, 
	57, 65, 70, 48, 57, 65, 70, 48, 
	57, 65, 70, 48, 57, 65, 70, 48, 
	57, 65, 70, 48, 57, 65, 70, 48, 
	57, 65, 70, 48, 57, 65, 70, 45, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	45, 48, 57, 65, 70, 48, 57, 65, 
	70, 48, 57, 65, 70, 48, 57, 65, 
	70, 45, 48, 57, 65, 70, 48, 57, 
	65, 70, 48, 57, 65, 70, 48, 57, 
	65, 70, 45, 48, 57, 65, 70, 48, 
	57, 65, 70, 48, 57, 65, 70, 48, 
	57, 65, 70, 48, 57, 65, 70, 48, 
	57, 65, 70, 48, 57, 65, 70, 48, 
	57, 65, 70, 48, 57, 65, 70, 48, 
	57, 65, 70, 48, 57, 65, 70, 48, 
	57, 65, 70, 125, 32, 61, 32, 123, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	45, 48, 57, 65, 70, 48, 57, 65, 
	70, 48, 57, 65, 70, 48, 57, 65, 
	70, 45, 48, 57, 65, 70, 48, 57, 
	65, 70, 48, 57, 65, 70, 48, 57, 
	65, 70, 45, 48, 57, 65, 70, 48, 
	57, 65, 70, 48, 57, 65, 70, 48, 
	57, 65, 70, 45, 48, 57, 65, 70, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	48, 57, 65, 70, 48, 57, 65, 70, 
	48, 57, 65, 70, 125, 110, 100, 80, 
	114, 111, 106, 101, 99, 116, 83, 101, 
	99, 116, 105, 111, 110, 110, 100, 80, 
	114, 111, 106, 101, 99, 116, 13, 105, 
	115, 117, 97, 108, 83, 116, 117, 100, 
	105, 111, 86, 101, 114, 115, 105, 111, 
	110, 32, 61, 32, 46, 48, 57, 13, 
	46, 48, 57, 10, 71, 77, 80, 86, 
	71, 80, 71, 77, 80, 0
};

static const char _visual_studio_parser_single_lengths[] = {
	0, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 2, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	2, 1, 1, 1, 1, 1, 1, 1, 
	1, 2, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	2, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	2, 2, 2, 1, 1, 3, 3, 4, 
	3, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 2, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 2, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 2, 2, 2, 
	1, 1, 3, 3, 4, 3, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 2, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	2, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	2, 2, 2, 1, 1, 3, 3, 4, 
	3, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 2, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	1, 0, 0, 0, 0, 1, 0, 0, 
	0, 0, 1, 0, 0, 0, 0, 1, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 0, 0, 
	0, 0, 0, 0, 0, 0, 1, 0, 
	0, 0, 0, 1, 0, 0, 0, 0, 
	1, 0, 0, 0, 0, 1, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 1, 1, 1, 1, 2, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 2, 1, 0, 0, 0, 
	0, 0, 0, 0, 0, 1, 0, 0, 
	0, 0, 1, 0, 0, 0, 0, 1, 
	0, 0, 0, 0, 1, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 1, 1, 1, 1, 1, 0, 0, 
	0, 0, 0, 0, 0, 0, 1, 0, 
	0, 0, 0, 1, 0, 0, 0, 0, 
	1, 0, 0, 0, 0, 1, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 2, 1, 4, 0, 2, 
	3
};

static const char _visual_studio_parser_range_lengths[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 1, 1, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 1, 
	1, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 1, 1, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	0, 2, 2, 2, 2, 0, 2, 2, 
	2, 2, 0, 2, 2, 2, 2, 0, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 2, 2, 
	2, 2, 2, 2, 2, 2, 0, 2, 
	2, 2, 2, 0, 2, 2, 2, 2, 
	0, 2, 2, 2, 2, 0, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 2, 2, 2, 
	2, 2, 2, 2, 2, 0, 2, 2, 
	2, 2, 0, 2, 2, 2, 2, 0, 
	2, 2, 2, 2, 0, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 0, 0, 0, 0, 0, 2, 2, 
	2, 2, 2, 2, 2, 2, 0, 2, 
	2, 2, 2, 0, 2, 2, 2, 2, 
	0, 2, 2, 2, 2, 0, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 1, 1, 0, 0, 0, 0, 
	0
};

static const short _visual_studio_parser_index_offsets[] = {
	0, 0, 2, 4, 6, 8, 10, 12, 
	14, 16, 18, 20, 22, 24, 26, 28, 
	30, 32, 34, 36, 38, 40, 42, 44, 
	46, 48, 50, 52, 54, 56, 58, 60, 
	62, 64, 66, 68, 70, 72, 74, 76, 
	78, 80, 82, 84, 86, 88, 90, 92, 
	94, 96, 98, 100, 102, 104, 106, 108, 
	110, 112, 114, 116, 118, 121, 125, 127, 
	129, 131, 133, 135, 137, 139, 141, 143, 
	145, 147, 149, 151, 153, 155, 157, 159, 
	162, 166, 168, 170, 172, 174, 176, 178, 
	180, 182, 185, 187, 189, 191, 193, 195, 
	197, 199, 201, 203, 205, 207, 209, 211, 
	213, 216, 218, 220, 222, 224, 226, 228, 
	230, 232, 234, 236, 238, 240, 242, 244, 
	246, 248, 250, 252, 254, 256, 258, 260, 
	262, 264, 266, 268, 270, 272, 274, 276, 
	278, 280, 282, 284, 286, 288, 290, 292, 
	294, 296, 298, 300, 302, 304, 306, 308, 
	310, 313, 316, 319, 321, 323, 327, 331, 
	336, 340, 342, 344, 346, 348, 350, 352, 
	354, 356, 358, 360, 362, 364, 366, 368, 
	370, 372, 374, 377, 379, 381, 383, 385, 
	387, 389, 391, 393, 395, 397, 399, 401, 
	403, 405, 408, 410, 412, 414, 416, 418, 
	420, 422, 424, 426, 428, 430, 432, 434, 
	436, 438, 440, 442, 444, 446, 448, 450, 
	452, 454, 456, 458, 460, 462, 464, 466, 
	468, 470, 472, 474, 476, 478, 481, 484, 
	487, 489, 491, 495, 499, 504, 508, 510, 
	512, 514, 516, 518, 520, 522, 524, 526, 
	528, 530, 532, 534, 536, 538, 540, 542, 
	545, 547, 549, 551, 553, 555, 557, 559, 
	561, 563, 565, 567, 569, 571, 573, 575, 
	577, 579, 581, 583, 585, 587, 589, 591, 
	593, 595, 597, 599, 601, 603, 605, 607, 
	609, 612, 614, 616, 618, 620, 622, 624, 
	626, 628, 630, 632, 634, 636, 638, 640, 
	642, 644, 646, 648, 650, 652, 654, 656, 
	658, 660, 662, 664, 666, 668, 670, 672, 
	674, 676, 678, 680, 682, 684, 686, 688, 
	690, 693, 696, 699, 701, 703, 707, 711, 
	716, 720, 722, 724, 726, 728, 730, 732, 
	734, 736, 738, 740, 742, 744, 746, 748, 
	750, 752, 754, 756, 758, 760, 762, 764, 
	766, 768, 770, 772, 774, 776, 778, 780, 
	782, 784, 786, 788, 790, 792, 794, 796, 
	798, 800, 802, 804, 806, 809, 813, 815, 
	817, 819, 821, 823, 825, 827, 829, 831, 
	833, 836, 839, 842, 845, 848, 851, 854, 
	857, 859, 862, 865, 868, 871, 873, 876, 
	879, 882, 885, 887, 890, 893, 896, 899, 
	901, 904, 907, 910, 913, 916, 919, 922, 
	925, 928, 931, 934, 937, 939, 941, 943, 
	945, 947, 949, 951, 953, 955, 957, 959, 
	961, 963, 965, 967, 969, 971, 973, 976, 
	979, 982, 985, 988, 991, 994, 997, 999, 
	1002, 1005, 1008, 1011, 1013, 1016, 1019, 1022, 
	1025, 1027, 1030, 1033, 1036, 1039, 1041, 1044, 
	1047, 1050, 1053, 1056, 1059, 1062, 1065, 1068, 
	1071, 1074, 1077, 1079, 1081, 1083, 1085, 1088, 
	1090, 1092, 1094, 1096, 1098, 1100, 1102, 1104, 
	1106, 1108, 1110, 1112, 1114, 1116, 1118, 1120, 
	1122, 1124, 1126, 1128, 1130, 1132, 1134, 1136, 
	1138, 1140, 1142, 1144, 1146, 1148, 1150, 1152, 
	1154, 1156, 1158, 1160, 1162, 1164, 1166, 1168, 
	1170, 1172, 1174, 1176, 1178, 1180, 1182, 1184, 
	1186, 1188, 1190, 1192, 1195, 1197, 1200, 1203, 
	1206, 1209, 1212, 1215, 1218, 1221, 1223, 1226, 
	1229, 1232, 1235, 1237, 1240, 1243, 1246, 1249, 
	1251, 1254, 1257, 1260, 1263, 1265, 1268, 1271, 
	1274, 1277, 1280, 1283, 1286, 1289, 1292, 1295, 
	1298, 1301, 1303, 1305, 1307, 1309, 1311, 1314, 
	1317, 1320, 1323, 1326, 1329, 1332, 1335, 1337, 
	1340, 1343, 1346, 1349, 1351, 1354, 1357, 1360, 
	1363, 1365, 1368, 1371, 1374, 1377, 1379, 1382, 
	1385, 1388, 1391, 1394, 1397, 1400, 1403, 1406, 
	1409, 1412, 1415, 1417, 1419, 1421, 1423, 1425, 
	1427, 1429, 1431, 1433, 1435, 1437, 1439, 1441, 
	1443, 1445, 1447, 1449, 1451, 1453, 1455, 1457, 
	1459, 1461, 1463, 1465, 1467, 1469, 1471, 1473, 
	1475, 1477, 1479, 1481, 1483, 1485, 1487, 1489, 
	1491, 1493, 1495, 1497, 1499, 1501, 1503, 1505, 
	1507, 1509, 1511, 1514, 1518, 1520, 1525, 1526, 
	1529
};

static const short _visual_studio_parser_trans_targs[] = {
	2, 0, 3, 0, 4, 0, 5, 0, 
	6, 0, 7, 0, 8, 0, 9, 0, 
	10, 0, 11, 0, 12, 0, 13, 0, 
	14, 0, 15, 0, 16, 0, 17, 0, 
	18, 0, 19, 0, 20, 0, 21, 0, 
	22, 0, 23, 0, 24, 0, 25, 0, 
	26, 0, 27, 0, 28, 0, 29, 0, 
	30, 0, 31, 0, 32, 0, 33, 0, 
	34, 0, 35, 0, 36, 0, 37, 0, 
	38, 0, 39, 0, 40, 0, 41, 0, 
	42, 0, 43, 0, 44, 0, 45, 0, 
	46, 0, 47, 0, 48, 0, 49, 0, 
	50, 0, 51, 0, 52, 0, 53, 0, 
	54, 0, 55, 0, 56, 0, 57, 0, 
	58, 0, 59, 0, 60, 0, 61, 61, 
	0, 62, 61, 61, 0, 63, 0, 64, 
	0, 65, 0, 66, 0, 67, 0, 68, 
	0, 69, 0, 70, 0, 71, 0, 72, 
	0, 73, 0, 74, 0, 75, 0, 76, 
	0, 77, 0, 78, 0, 79, 0, 80, 
	80, 0, 81, 80, 80, 0, 669, 0, 
	83, 0, 84, 0, 85, 0, 86, 0, 
	87, 0, 88, 0, 89, 0, 90, 271, 
	0, 91, 0, 92, 0, 93, 0, 94, 
	0, 95, 0, 96, 0, 97, 0, 98, 
	0, 99, 0, 100, 0, 101, 0, 102, 
	0, 103, 0, 104, 0, 105, 281, 0, 
	106, 0, 107, 0, 108, 0, 109, 0, 
	110, 0, 111, 0, 112, 0, 113, 0, 
	114, 0, 115, 0, 116, 0, 117, 0, 
	118, 0, 119, 0, 120, 0, 121, 0, 
	122, 0, 123, 0, 124, 0, 125, 0, 
	126, 0, 127, 0, 128, 0, 129, 0, 
	130, 0, 131, 0, 132, 0, 133, 0, 
	134, 0, 135, 0, 136, 0, 137, 0, 
	138, 0, 139, 0, 140, 0, 141, 0, 
	142, 0, 143, 0, 144, 0, 145, 0, 
	146, 0, 147, 0, 148, 0, 149, 0, 
	150, 0, 151, 0, 152, 0, 153, 161, 
	0, 0, 155, 154, 0, 155, 154, 156, 
	0, 157, 0, 0, 159, 0, 158, 0, 
	159, 0, 158, 0, 160, 159, 0, 158, 
	152, 159, 0, 158, 162, 0, 163, 0, 
	164, 0, 165, 0, 166, 0, 167, 0, 
	168, 0, 169, 0, 170, 0, 171, 0, 
	172, 0, 173, 0, 174, 0, 175, 0, 
	176, 0, 177, 0, 178, 0, 179, 271, 
	0, 180, 0, 181, 0, 182, 0, 183, 
	0, 184, 0, 185, 0, 186, 0, 187, 
	0, 188, 0, 189, 0, 190, 0, 191, 
	0, 192, 0, 193, 0, 105, 194, 0, 
	195, 0, 196, 0, 197, 0, 198, 0, 
	199, 0, 200, 0, 201, 0, 202, 0, 
	203, 0, 204, 0, 205, 0, 206, 0, 
	207, 0, 208, 0, 209, 0, 210, 0, 
	211, 0, 212, 0, 213, 0, 214, 0, 
	215, 0, 216, 0, 217, 0, 218, 0, 
	219, 0, 220, 0, 221, 0, 222, 0, 
	223, 0, 224, 0, 225, 0, 226, 0, 
	227, 0, 228, 0, 229, 0, 230, 238, 
	0, 0, 232, 231, 0, 232, 231, 233, 
	0, 234, 0, 0, 236, 0, 235, 0, 
	236, 0, 235, 0, 237, 236, 0, 235, 
	229, 236, 0, 235, 239, 0, 240, 0, 
	241, 0, 242, 0, 243, 0, 244, 0, 
	245, 0, 246, 0, 247, 0, 248, 0, 
	249, 0, 250, 0, 251, 0, 252, 0, 
	253, 0, 254, 0, 255, 0, 256, 271, 
	0, 257, 0, 258, 0, 259, 0, 260, 
	0, 261, 0, 262, 0, 263, 0, 264, 
	0, 265, 0, 266, 0, 267, 0, 268, 
	0, 269, 0, 270, 0, 194, 0, 272, 
	0, 273, 0, 274, 0, 275, 0, 276, 
	0, 277, 0, 278, 0, 279, 0, 280, 
	0, 670, 0, 282, 0, 283, 0, 284, 
	0, 285, 0, 286, 0, 287, 0, 288, 
	0, 289, 202, 0, 290, 0, 291, 0, 
	292, 0, 293, 0, 294, 0, 295, 0, 
	296, 0, 297, 0, 298, 0, 299, 0, 
	300, 0, 301, 0, 302, 0, 303, 0, 
	304, 0, 305, 0, 306, 0, 307, 0, 
	308, 0, 309, 0, 310, 0, 311, 0, 
	312, 0, 313, 0, 314, 0, 315, 0, 
	316, 0, 317, 0, 318, 0, 319, 0, 
	320, 0, 321, 0, 322, 0, 323, 0, 
	324, 0, 325, 0, 326, 0, 327, 0, 
	328, 0, 329, 337, 0, 0, 331, 330, 
	0, 331, 330, 332, 0, 333, 0, 0, 
	335, 0, 334, 0, 335, 0, 334, 0, 
	336, 335, 0, 334, 328, 335, 0, 334, 
	338, 0, 339, 0, 340, 0, 341, 0, 
	342, 0, 343, 0, 344, 0, 345, 0, 
	346, 0, 347, 0, 348, 0, 349, 0, 
	350, 0, 351, 0, 87, 0, 353, 0, 
	354, 0, 355, 0, 356, 0, 357, 0, 
	358, 0, 359, 0, 360, 0, 361, 0, 
	362, 0, 363, 0, 364, 0, 365, 0, 
	366, 0, 367, 0, 368, 0, 369, 0, 
	370, 0, 371, 0, 372, 0, 373, 0, 
	374, 0, 375, 0, 376, 0, 377, 0, 
	378, 0, 379, 0, 380, 0, 381, 381, 
	0, 382, 381, 381, 0, 671, 0, 384, 
	0, 385, 0, 386, 0, 387, 0, 388, 
	0, 389, 0, 390, 0, 391, 0, 392, 
	0, 393, 393, 0, 394, 394, 0, 395, 
	395, 0, 396, 396, 0, 397, 397, 0, 
	398, 398, 0, 399, 399, 0, 400, 400, 
	0, 401, 0, 402, 402, 0, 403, 403, 
	0, 404, 404, 0, 405, 405, 0, 406, 
	0, 407, 407, 0, 408, 408, 0, 409, 
	409, 0, 410, 410, 0, 411, 0, 412, 
	412, 0, 413, 413, 0, 414, 414, 0, 
	415, 415, 0, 416, 0, 417, 417, 0, 
	418, 418, 0, 419, 419, 0, 420, 420, 
	0, 421, 421, 0, 422, 422, 0, 423, 
	423, 0, 424, 424, 0, 425, 425, 0, 
	426, 426, 0, 427, 427, 0, 428, 428, 
	0, 429, 0, 430, 0, 431, 0, 432, 
	0, 433, 0, 434, 0, 435, 0, 437, 
	436, 437, 436, 438, 0, 439, 0, 440, 
	0, 442, 441, 442, 441, 443, 0, 444, 
	0, 445, 0, 446, 0, 447, 447, 0, 
	448, 448, 0, 449, 449, 0, 450, 450, 
	0, 451, 451, 0, 452, 452, 0, 453, 
	453, 0, 454, 454, 0, 455, 0, 456, 
	456, 0, 457, 457, 0, 458, 458, 0, 
	459, 459, 0, 460, 0, 461, 461, 0, 
	462, 462, 0, 463, 463, 0, 464, 464, 
	0, 465, 0, 466, 466, 0, 467, 467, 
	0, 468, 468, 0, 469, 469, 0, 470, 
	0, 471, 471, 0, 472, 472, 0, 473, 
	473, 0, 474, 474, 0, 475, 475, 0, 
	476, 476, 0, 477, 477, 0, 478, 478, 
	0, 479, 479, 0, 480, 480, 0, 481, 
	481, 0, 482, 482, 0, 483, 0, 484, 
	0, 485, 0, 486, 0, 487, 635, 0, 
	488, 0, 489, 0, 490, 0, 491, 0, 
	492, 0, 493, 0, 494, 0, 495, 0, 
	496, 0, 497, 0, 498, 0, 499, 0, 
	500, 0, 501, 0, 502, 0, 503, 0, 
	504, 0, 505, 0, 506, 0, 507, 0, 
	508, 0, 509, 0, 510, 0, 511, 0, 
	512, 0, 513, 0, 514, 0, 515, 0, 
	516, 0, 517, 0, 518, 0, 519, 0, 
	520, 0, 521, 0, 522, 0, 523, 0, 
	524, 0, 525, 0, 526, 0, 527, 0, 
	528, 0, 529, 0, 530, 0, 531, 0, 
	532, 0, 533, 0, 534, 0, 535, 0, 
	536, 0, 537, 0, 538, 0, 539, 0, 
	540, 619, 0, 541, 0, 542, 542, 0, 
	543, 543, 0, 544, 544, 0, 545, 545, 
	0, 546, 546, 0, 547, 547, 0, 548, 
	548, 0, 549, 549, 0, 550, 0, 551, 
	551, 0, 552, 552, 0, 553, 553, 0, 
	554, 554, 0, 555, 0, 556, 556, 0, 
	557, 557, 0, 558, 558, 0, 559, 559, 
	0, 560, 0, 561, 561, 0, 562, 562, 
	0, 563, 563, 0, 564, 564, 0, 565, 
	0, 566, 566, 0, 567, 567, 0, 568, 
	568, 0, 569, 569, 0, 570, 570, 0, 
	571, 571, 0, 572, 572, 0, 573, 573, 
	0, 574, 574, 0, 575, 575, 0, 576, 
	576, 0, 577, 577, 0, 578, 0, 579, 
	0, 580, 0, 581, 0, 582, 0, 583, 
	583, 0, 584, 584, 0, 585, 585, 0, 
	586, 586, 0, 587, 587, 0, 588, 588, 
	0, 589, 589, 0, 590, 590, 0, 591, 
	0, 592, 592, 0, 593, 593, 0, 594, 
	594, 0, 595, 595, 0, 596, 0, 597, 
	597, 0, 598, 598, 0, 599, 599, 0, 
	600, 600, 0, 601, 0, 602, 602, 0, 
	603, 603, 0, 604, 604, 0, 605, 605, 
	0, 606, 0, 607, 607, 0, 608, 608, 
	0, 609, 609, 0, 610, 610, 0, 611, 
	611, 0, 612, 612, 0, 613, 613, 0, 
	614, 614, 0, 615, 615, 0, 616, 616, 
	0, 617, 617, 0, 618, 618, 0, 536, 
	0, 620, 0, 621, 0, 622, 0, 623, 
	0, 624, 0, 625, 0, 626, 0, 627, 
	0, 628, 0, 629, 0, 630, 0, 631, 
	0, 632, 0, 633, 0, 634, 0, 484, 
	0, 636, 0, 637, 0, 638, 0, 639, 
	0, 640, 0, 641, 0, 642, 0, 643, 
	0, 644, 0, 382, 0, 646, 0, 647, 
	0, 648, 0, 649, 0, 650, 0, 651, 
	0, 652, 0, 653, 0, 654, 0, 655, 
	0, 656, 0, 657, 0, 658, 0, 659, 
	0, 660, 0, 661, 0, 662, 0, 663, 
	0, 664, 0, 665, 0, 666, 0, 667, 
	667, 0, 668, 667, 667, 0, 672, 0, 
	82, 352, 383, 645, 0, 0, 82, 383, 
	0, 82, 352, 383, 0, 0
};

static const char _visual_studio_parser_trans_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 1, 1, 
	0, 3, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 1, 
	1, 0, 5, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 49, 1, 0, 27, 0, 0, 
	0, 0, 0, 0, 52, 0, 1, 0, 
	29, 0, 0, 0, 0, 29, 0, 0, 
	0, 29, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 55, 1, 0, 31, 0, 0, 
	0, 0, 0, 0, 58, 0, 1, 0, 
	33, 0, 0, 0, 0, 33, 0, 0, 
	0, 33, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 43, 1, 
	0, 23, 0, 0, 0, 0, 0, 0, 
	46, 0, 1, 0, 25, 0, 0, 0, 
	0, 25, 0, 0, 0, 25, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 1, 1, 
	0, 9, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 1, 1, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 11, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 37, 
	1, 13, 0, 0, 0, 0, 0, 0, 
	0, 40, 1, 15, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 1, 1, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 17, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 1, 1, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 19, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 1, 
	1, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 21, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 1, 
	1, 0, 7, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0
};

static const char _visual_studio_parser_eof_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 35, 35, 35, 
	35
};

static const int visual_studio_parser_start = 1;
static const int visual_studio_parser_first_final = 669;
static const int visual_studio_parser_error = 0;

static const int visual_studio_parser_en_main = 1;


#line 101 "sushi/visual_studio_parser.rl"

bool VisualStudioParser::parse(const char *buffer, size_t len)
{
    int cs = visual_studio_parser_en_main;
    
    const char *mark = NULL;
    const char *p = buffer;
    const char *pe = buffer + strlen(buffer);
    const char *eof = pe;

    
#line 1026 "sushi/visual_studio_parser.cc"
	{
	cs = visual_studio_parser_start;
	}

#line 112 "sushi/visual_studio_parser.rl"
    
#line 1033 "sushi/visual_studio_parser.cc"
	{
	int _klen;
	unsigned int _trans;
	const char *_acts;
	unsigned int _nacts;
	const char *_keys;

	if ( p == pe )
		goto _test_eof;
	if ( cs == 0 )
		goto _out;
_resume:
	_keys = _visual_studio_parser_trans_keys + _visual_studio_parser_key_offsets[cs];
	_trans = _visual_studio_parser_index_offsets[cs];

	_klen = _visual_studio_parser_single_lengths[cs];
	if ( _klen > 0 ) {
		const char *_lower = _keys;
		const char *_mid;
		const char *_upper = _keys + _klen - 1;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + ((_upper-_lower) >> 1);
			if ( (*p) < *_mid )
				_upper = _mid - 1;
			else if ( (*p) > *_mid )
				_lower = _mid + 1;
			else {
				_trans += (unsigned int)(_mid - _keys);
				goto _match;
			}
		}
		_keys += _klen;
		_trans += _klen;
	}

	_klen = _visual_studio_parser_range_lengths[cs];
	if ( _klen > 0 ) {
		const char *_lower = _keys;
		const char *_mid;
		const char *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( (*p) < _mid[0] )
				_upper = _mid - 2;
			else if ( (*p) > _mid[1] )
				_lower = _mid + 2;
			else {
				_trans += (unsigned int)((_mid - _keys)>>1);
				goto _match;
			}
		}
		_trans += _klen;
	}

_match:
	cs = _visual_studio_parser_trans_targs[_trans];

	if ( _visual_studio_parser_trans_actions[_trans] == 0 )
		goto _again;

	_acts = _visual_studio_parser_actions + _visual_studio_parser_trans_actions[_trans];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 )
	{
		switch ( *_acts++ )
		{
	case 0:
#line 17 "sushi/visual_studio_parser.rl"
	{ mark = p; }
	break;
	case 1:
#line 18 "sushi/visual_studio_parser.rl"
	{ FormatVersion(mark, p - mark); }
	break;
	case 2:
#line 19 "sushi/visual_studio_parser.rl"
	{ CommentVersion(mark, p - mark); }
	break;
	case 3:
#line 20 "sushi/visual_studio_parser.rl"
	{ VisualStudioVersion(mark, p - mark); }
	break;
	case 4:
#line 21 "sushi/visual_studio_parser.rl"
	{ MinimumVisualStudioVersion(mark, p - mark); }
	break;
	case 5:
#line 22 "sushi/visual_studio_parser.rl"
	{ ProjectTypeGUID(mark, p - mark); }
	break;
	case 6:
#line 23 "sushi/visual_studio_parser.rl"
	{ ProjectName(mark, p - mark); }
	break;
	case 7:
#line 24 "sushi/visual_studio_parser.rl"
	{ ProjectPath(mark, p - mark); }
	break;
	case 8:
#line 25 "sushi/visual_studio_parser.rl"
	{ ProjectGUID(mark, p - mark); }
	break;
	case 9:
#line 26 "sushi/visual_studio_parser.rl"
	{ ProjectDependsGUIDKey(mark, p - mark); }
	break;
	case 10:
#line 27 "sushi/visual_studio_parser.rl"
	{ ProjectDependsGUIDValue(mark, p - mark); }
	break;
	case 11:
#line 28 "sushi/visual_studio_parser.rl"
	{ SolutionConfigPlatformKey(mark, p - mark); }
	break;
	case 12:
#line 29 "sushi/visual_studio_parser.rl"
	{ SolutionConfigPlatformValue(mark, p - mark); }
	break;
	case 13:
#line 30 "sushi/visual_studio_parser.rl"
	{ ProjectConfigPlatformKey(mark, p - mark); }
	break;
	case 14:
#line 31 "sushi/visual_studio_parser.rl"
	{ ProjectConfigPlatformValue(mark, p - mark); }
	break;
	case 15:
#line 32 "sushi/visual_studio_parser.rl"
	{ SolutionPropertiesKey(mark, p - mark); }
	break;
	case 16:
#line 33 "sushi/visual_studio_parser.rl"
	{ SolutionPropertiesValue(mark, p - mark); }
	break;
#line 1174 "sushi/visual_studio_parser.cc"
		}
	}

_again:
	if ( cs == 0 )
		goto _out;
	if ( ++p != pe )
		goto _resume;
	_test_eof: {}
	if ( p == eof )
	{
	const char *__acts = _visual_studio_parser_actions + _visual_studio_parser_eof_actions[cs];
	unsigned int __nacts = (unsigned int) *__acts++;
	while ( __nacts-- > 0 ) {
		switch ( *__acts++ ) {
	case 17:
#line 35 "sushi/visual_studio_parser.rl"
	{ 
        Done();
        {p++; goto _out; }
    }
	break;
#line 1197 "sushi/visual_studio_parser.cc"
		}
	}
	}

	_out: {}
	}

#line 113 "sushi/visual_studio_parser.rl"

    return (cs != visual_studio_parser_error || cs == visual_studio_parser_first_final);
}
